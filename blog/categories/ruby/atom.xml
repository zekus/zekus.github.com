<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | antoniolorusso.com]]></title>
  <link href="http://zekus.github.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://zekus.github.com/"/>
  <updated>2013-04-29T12:13:07+02:00</updated>
  <id>http://zekus.github.com/</id>
  <author>
    <name><![CDATA[Antonio Lorusso]]></name>
    <email><![CDATA[antonio.lorusso@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby 1.9.3-p125 and RVM on Mac]]></title>
    <link href="http://zekus.github.com/blog/2012/02/18/ruby-1-9-3-p125-and-rvm-on-mac/"/>
    <updated>2012-02-18T15:32:41+01:00</updated>
    <id>http://zekus.github.com/blog/2012/02/18/ruby-1-9-3-p125-and-rvm-on-mac</id>
    <content type="html"><![CDATA[<p>A <a href="http://www.ruby-lang.org/en/news/2012/02/16/ruby-1-9-3-p125-is-released/">new ruby version</a> is out and it's time to upgrade! The first try gave me this error:</p>

<p><code>
?  ~  rvm install 1.9.3-p125
Error running ' ./configure --prefix=/Users/antonio/.rvm/rubies/ruby-1.9.3-p125 --enable-shared --disable-install-doc --with-libyaml --with-opt-dir=/Users/antonio/.rvm/usr ', please read /Users/antonio/.rvm/log/ruby-1.9.3-p125/configure.log
There has been an error while running configure. Halting the installation.
</code></p>

<p>Adding the compiler option "--with-gcc=clang" worked:</p>

<p><code>
?  ~  rvm install 1.9.3-p125 --with-gcc=clang
Install of ruby-1.9.3-p125 - #complete
</code></p>

<p>enjoy Ruby :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nokogiri, RVM, Homebrew and headhache!!!]]></title>
    <link href="http://zekus.github.com/blog/2011/06/11/nokogiri-rvm-homebrew-and-headhache/"/>
    <updated>2011-06-11T14:32:48+02:00</updated>
    <id>http://zekus.github.com/blog/2011/06/11/nokogiri-rvm-homebrew-and-headhache</id>
    <content type="html"><![CDATA[<p>Thanks to a gist (which I forked and slightly changed) I was able to finally install Nokogiri on my mac:</p>

<p><div><script src='https://gist.github.com/1020543.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>If you had MacPorts previously installed, it might still not work so
<code>
sudo mv /opt/local /opt/local_old
</code>
and try again.</p>

<p>Enjoy :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macports, Snow Leopard and XCode 3.2]]></title>
    <link href="http://zekus.github.com/blog/2009/10/18/macports-snow-leopard-and-xcode-3-2/"/>
    <updated>2009-10-18T01:09:47+02:00</updated>
    <id>http://zekus.github.com/blog/2009/10/18/macports-snow-leopard-and-xcode-3-2</id>
    <content type="html"><![CDATA[<p>When I upgraded my macbook to Snow Leopard, macports just worked as it was before, or so I thought, until yesterday when I tried to install ImageMagick and rmagick ruby gem and I got this error:
<code>
gem install rmagick
ERROR:  Error installing rmagick:
ERROR: Failed to build gem native extension.
/opt/local/bin/ruby extconf.rb
checking for Ruby version &gt;= 1.8.5... yes
checking for gcc... yes
checking for Magick-config... yes
checking for ImageMagick version &gt;= 6.3.5... yes
checking for HDRI disabled version of ImageMagick... yes
checking for stdint.h... no
checking for sys/types.h... no
checking for wand/MagickWand.h... no
Can't install RMagick 2.11.1. Can't find MagickWand.h.
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of
necessary libraries and/or headers.  Check the mkmf.log file for more
details.  You may need configuration options.
Provided configuration options:
--with-opt-dir
--without-opt-dir
--with-opt-include
--without-opt-include=${opt-dir}/include
--with-opt-lib
--without-opt-lib=${opt-dir}/lib
--with-make-prog
--without-make-prog
--srcdir=.
--curdir
--ruby=/opt/local/bin/ruby
</code>
After having lost the best of my youth trying to fix this issue, I can't remember exactly how I did it, but I came up with this idea of reinstalling ruby and... guess what? It did work!
So the lesson here is ... whenever you upgrade to a major release of XCode, you have to reinstall all your macports. These commands can save your day or two:
<code>
$ sudo port selfupdate
$ sudo port sync
$ sudo port upgrade --force installed
</code>
;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails and Passenger ( aka mod_rails )]]></title>
    <link href="http://zekus.github.com/blog/2009/03/22/rails-and-passenger-aka-mod_rails/"/>
    <updated>2009-03-22T16:00:44+01:00</updated>
    <id>http://zekus.github.com/blog/2009/03/22/rails-and-passenger-aka-mod_rails</id>
    <content type="html"><![CDATA[<p>We tried to setup a rails application in a server subfolder in a way that could have been accessible through an URL like http://servername/rails,  so we followed the configuration manual for mod_rails.We found that, to make rails works in a subfolder, should have used the Apache parameter RailsBaseURI.</p>

<p>With a great surprise, that didn't worked so we started trying all possible apache configuration combinations to avoid that 404 error that was becoming a nightmare.</p>

<p>After few hours we started doubting about our Apache knowledge and even about our capacity of reading and following a couple of stupid instructions on a website!</p>

<p>We gave up and we started googling around when... the solution came out from dozens of blogs, forums and newsletters:</p>

<blockquote><p>MOD_RAILS IS NOT COMPATIBLE WITH RAILS 2.2.2 AND ITS NEW ROUTING SYSTEM</p></blockquote>

<p>"HOLY CRAP" was our esclamation and I will not mention here all the italian's bad words that suddenly came out from our mounth!</p>

<p>So, here the solution: put this line here
<code>
config.action_controller.relative_url_root = "/guestbook"
</code>
in your environment.rb</p>

<p>Now restart apache and enjoy!</p>

<p>ps. why hadn't we changed mod_rails with mongrel or anything different? I don't know!!!!</p>

<p><img src="http://img.zemanta.com/pixy.gif?x-id=737895d3-2f2e-43e4-8cec-477c62acba02" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails ... the beginning]]></title>
    <link href="http://zekus.github.com/blog/2009/03/13/rails-the-beginning/"/>
    <updated>2009-03-13T23:45:05+01:00</updated>
    <id>http://zekus.github.com/blog/2009/03/13/rails-the-beginning</id>
    <content type="html"><![CDATA[<p>Finally I started a little RoR project with my friend Antonello but we did it in the wrong way :D</p>

<p>We started from the database design (not exactly the rails way) and we are trying to solve problems that a Rails developer usually doesn't have like create the scaffold without migration scripts!</p>

<p>Here are 3 simple steps to do it:</p>

<ul>
<li><p>rake db:schema:dump (create the schema dump from the existing database)</p></li>
<li><p>mv db/schema.rb db/migrate/001_initial.rb (create the initial migration script manually)</p></li>
<li><p>script/generate scaffold firstmodule field1:text field2:varchar field3:date --skip-migration
The most important thing you should never forget is that your tables on the database must have a PLURAL name but use the SINGULAR name when you create the scaffold for that table.<br/>
( ex: the table name is "tools" but the command to create the scaffold is script/generate scaffold tool )</p></li>
</ul>


<p>Happy RoRing !!!</p>

<p><img src="http://img.zemanta.com/pixy.gif?x-id=6ccfe230-6968-422e-b5c5-6c6f3bfe43ec" alt="" /></p>
]]></content>
  </entry>
  
</feed>
