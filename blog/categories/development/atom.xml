<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Development | antoniolorusso.com]]></title>
  <link href="http://zekus.github.io/blog/categories/development/atom.xml" rel="self"/>
  <link href="http://zekus.github.io/"/>
  <updated>2013-06-25T01:27:00+02:00</updated>
  <id>http://zekus.github.io/</id>
  <author>
    <name><![CDATA[Antonio Lorusso]]></name>
    <email><![CDATA[antonio.lorusso@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Macports, Snow Leopard and XCode 3.2]]></title>
    <link href="http://zekus.github.io/blog/2009/10/18/macports-snow-leopard-and-xcode-3-2/"/>
    <updated>2009-10-18T01:09:47+02:00</updated>
    <id>http://zekus.github.io/blog/2009/10/18/macports-snow-leopard-and-xcode-3-2</id>
    <content type="html"><![CDATA[<p>When I upgraded my macbook to Snow Leopard, macports just worked as it was before, or so I thought, until yesterday when I tried to install ImageMagick and rmagick ruby gem and I got this error:
<code>
gem install rmagick
ERROR:  Error installing rmagick:
ERROR: Failed to build gem native extension.
/opt/local/bin/ruby extconf.rb
checking for Ruby version &gt;= 1.8.5... yes
checking for gcc... yes
checking for Magick-config... yes
checking for ImageMagick version &gt;= 6.3.5... yes
checking for HDRI disabled version of ImageMagick... yes
checking for stdint.h... no
checking for sys/types.h... no
checking for wand/MagickWand.h... no
Can't install RMagick 2.11.1. Can't find MagickWand.h.
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of
necessary libraries and/or headers.  Check the mkmf.log file for more
details.  You may need configuration options.
Provided configuration options:
--with-opt-dir
--without-opt-dir
--with-opt-include
--without-opt-include=${opt-dir}/include
--with-opt-lib
--without-opt-lib=${opt-dir}/lib
--with-make-prog
--without-make-prog
--srcdir=.
--curdir
--ruby=/opt/local/bin/ruby
</code>
After having lost the best of my youth trying to fix this issue, I can&rsquo;t remember exactly how I did it, but I came up with this idea of reinstalling ruby and&hellip; guess what? It did work!
So the lesson here is &hellip; whenever you upgrade to a major release of XCode, you have to reinstall all your macports. These commands can save your day or two:
<code>
$ sudo port selfupdate
$ sudo port sync
$ sudo port upgrade --force installed
</code>
;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LightTPD nightmare]]></title>
    <link href="http://zekus.github.io/blog/2008/11/13/lighttpd-nightmare/"/>
    <updated>2008-11-13T14:38:56+01:00</updated>
    <id>http://zekus.github.io/blog/2008/11/13/lighttpd-nightmare</id>
    <content type="html"><![CDATA[<p>if are trying to use mod_evhost in lighttpd in a more advanced way like using deep subdomains or with particulars tld like &ldquo;co.uk&rdquo; aka 2tls, you should know that
<code>
$HTTP["host"] =~ "^([^.]+)\.([^.]+)\.babelclient\.photobox\.([^.]+)\.([^.]+)$"{
evhost.path-pattern = "/web/%5/%6/assets"
}
</code>
will NEVER WORK but
<code>
$HTTP["host"] =~ "^([^.]+)\.([^.]+)\.babelclient\.photobox\.([^.]+)\.([^.]+)"{
evhost.path-pattern = "/web/%5/%6/assets/"
}
</code>
WILL WORK.</p>

<p>compare the two pieces of code and start screaming like a mad!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyOnRails excitement]]></title>
    <link href="http://zekus.github.io/blog/2008/06/28/rubyonrails-excitement-2/"/>
    <updated>2008-06-28T02:13:00+02:00</updated>
    <id>http://zekus.github.io/blog/2008/06/28/rubyonrails-excitement-2</id>
    <content type="html"><![CDATA[<p>I just want to share how excited I am studying Ruby and RubyOnRails.
Soon I&rsquo;ll start the development of a Facebook application with Rails.</p>

<p>stay tuned!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[quick solution to "svn: Checksum mismatch ..."]]></title>
    <link href="http://zekus.github.io/blog/2008/06/11/quick-solution-to-svn-checksum-mismatch-2/"/>
    <updated>2008-06-11T17:20:30+02:00</updated>
    <id>http://zekus.github.io/blog/2008/06/11/quick-solution-to-svn-checksum-mismatch-2</id>
    <content type="html"><![CDATA[<p>If this error afflict your quiet development day, I&rsquo;m sorry :D
I had this problem today and I solved in few steps:</p>

<ol>
<li> make a backup of the working copy in a different directory</li>
<li> delete only the corrupted directory from your working copy</li>
<li> make an svn update</li>
<li> copy back only the modified files you need from the backup copy to the current working copy</li>
<li> commit your changes
Now breath deeply and take a cold shower: I suppose you must be sweat! :D</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grep excluding .svn dirs]]></title>
    <link href="http://zekus.github.io/blog/2008/05/12/grep-excluding-svn-dirs/"/>
    <updated>2008-05-12T13:33:16+02:00</updated>
    <id>http://zekus.github.io/blog/2008/05/12/grep-excluding-svn-dirs</id>
    <content type="html"><![CDATA[<p>Grep is a fantastic search command that let you filter results and give you what you need. It is used to search in the content of files and is very useful for programmers like us :)</p>

<p>Typically, when you search in a directory recursively and you want to exclude hidden directory such as the .svn, you so this:
<code>
grep -ri "your password is" * | grep -v .
</code>
this waste time cause search in all directories including the ones you want to exclude and then remove the unwanted results.
This other method, is the correct and quickest one:
<code>
grep -r 'content_graphic' assets/js --exclude=*\.svn*
</code>
<strong>COOOL!</strong></p>

<p>If you want to make this permanent when you use grep, just put it in your profile file: on a Mac open ~/.profile with a text editor. If you&rsquo;re using Linux, edit ~/.bashrc or ~/.bash_profile or ~/.profile.</p>

<p>Add the following line to the top of the file:
<code>
export GREP_OPTIONS="--exclude=*\.svn*"
</code>
save and close!</p>

<p>Happy grepping to everybody ;)</p>
]]></content>
  </entry>
  
</feed>
