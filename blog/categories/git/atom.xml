<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GIT | antoniolorusso.com]]></title>
  <link href="http://zekus.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://zekus.github.io/"/>
  <updated>2013-07-30T01:06:03+02:00</updated>
  <id>http://zekus.github.io/</id>
  <author>
    <name><![CDATA[Antonio Lorusso]]></name>
    <email><![CDATA[antonio.lorusso@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[super-easy Git remote repository ]]></title>
    <link href="http://zekus.github.io/blog/2009/10/12/super-easy-git-remote-repository/"/>
    <updated>2009-10-12T23:55:28+02:00</updated>
    <id>http://zekus.github.io/blog/2009/10/12/super-easy-git-remote-repository</id>
    <content type="html"><![CDATA[<h2>1. Creating a remote repository before the local one</h2>

<p><strong>Step 1</strong>: create the folder on the remote server and initialise the empty bare repository
<code>
ssh username@yourserver
mkdir yourgitremoterepo.git
cd yourgitremoterepo.git
git --bare init
</code>
<strong>Step 2</strong>: back to your machine, clone the repository
<code>
git clone username@yourserver:yourgitremoterepo.git
</code></p>

<h2>2. Making your existing local repository available on remote</h2>

<p><strong>Step 1:</strong> I assume that you have done something like this
<code>
cd yourlocalrepo
git init
git add .
git commit -a -m "first commit"
</code>
<strong>Step 2:</strong> to create the remote repository, login to your remote server and initialise an empty bare repository
<code>
ssh username@yourserver
mkdir yourgitremoterepo.git
cd yourgitremoterepo.git
git --bare init
</code>
<strong>Step 3: </strong>now back to your machine, link your remote repository with the local one and push all your files
<code>
git remote add origin username@yourserver:yourgitremoterepo.git
git push origin master
</code></p>

<p>done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[the GIT cheatsheet]]></title>
    <link href="http://zekus.github.io/blog/2009/08/29/the-git-cheatsheet/"/>
    <updated>2009-08-29T12:47:21+02:00</updated>
    <id>http://zekus.github.io/blog/2009/08/29/the-git-cheatsheet</id>
    <content type="html"><![CDATA[<p>Finally the cheatsheet I was waiting for <a href="http://zrusin.blogspot.com/2007/09/git-cheat-sheet.html">available here</a></p>

<p>;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tech Talk: Linus Torvalds on git]]></title>
    <link href="http://zekus.github.io/blog/2009/06/22/219/"/>
    <updated>2009-06-22T23:20:30+02:00</updated>
    <id>http://zekus.github.io/blog/2009/06/22/219</id>
    <content type="html"><![CDATA[<p>Git explained by his the creator. I&rsquo;m more convinced than ever!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ignore .DS_Store forever in GIT]]></title>
    <link href="http://zekus.github.io/blog/2009/03/09/ignore-ds_store-forever-in-git/"/>
    <updated>2009-03-09T02:26:25+01:00</updated>
    <id>http://zekus.github.io/blog/2009/03/09/ignore-ds_store-forever-in-git</id>
    <content type="html"><![CDATA[<p>With a couple of little commands, you&rsquo;ll be able to ignore the .DS_Store files forever from your git repositories on mac!</p>

<p>The following command will add the .gitignore file to the git configuration
<code>
git config --global core.excludesfile ~/.gitignore
</code></p>

<p>then, the following, will add the .DS_Store to the list</p>

<p><code>
echo .DS_Store &gt;&gt; ~/.gitignore
</code></p>

<p>and voil√†!</p>

<p><img src="http://img.zemanta.com/pixy.gif?x-id=e83f7a3e-301f-45e6-a80d-154706e6fe03" alt="" /></p>
]]></content>
  </entry>
  
</feed>
